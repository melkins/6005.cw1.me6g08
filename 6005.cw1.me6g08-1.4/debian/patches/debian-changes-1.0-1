Description: Upstream changes introduced in version 1.0-1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 6005.cw1.me6g08 (1.0-1) unstable; urgency=low
 .
   * Initial release (Closes: #101)
 .
 The person named in the Author field signed this changelog entry.
Author: Mike Elkins <me6g08@ecs.soton.ac.uk>
Bug-Debian: http://bugs.debian.org/101

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ 6005.cw1.me6g08-1.0/src/rss_php.php
@@ -0,0 +1,160 @@
+<?php
+/*
+	RSS_PHP - the PHP DOM based RSS Parser
+	Author: <rssphp.net>
+	Published: 200801 :: blacknet :: via rssphp.net
+	
+	RSS_PHP is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.
+
+	Usage:
+		See the documentation at http://rssphp.net/documentation
+	Examples:
+		Can be found online at http://rssphp.net/examples
+*/
+
+class rss_php {
+	
+	public $document;
+	public $channel;
+	public $items;
+
+/****************************
+	public load methods
+***/
+	# load RSS by URL
+		public function load($url=false, $unblock=true) {
+			if($url) {
+				if($unblock) {
+					$this->loadParser(file_get_contents($url, false, $this->randomContext()));
+				} else {
+					$this->loadParser(file_get_contents($url));
+				}
+			}
+		}
+	# load raw RSS data
+		public function loadRSS($rawxml=false) {
+			if($rawxml) {
+				$this->loadParser($rawxml);
+			}
+		}
+		
+/****************************
+	public load methods
+		@param $includeAttributes BOOLEAN
+		return array;
+***/
+	# return full rss array
+		public function getRSS($includeAttributes=false) {
+			if($includeAttributes) {
+				return $this->document;
+			}
+			return $this->valueReturner();
+		}
+	# return channel data
+		public function getChannel($includeAttributes=false) {
+			if($includeAttributes) {
+				return $this->channel;
+			}
+			return $this->valueReturner($this->channel);
+		}
+	# return rss items
+		public function getItems($includeAttributes=false) {
+			if($includeAttributes) {
+				return $this->items;
+			}
+			return $this->valueReturner($this->items);
+		}
+
+/****************************
+	internal methods
+***/
+	private function loadParser($rss=false) {
+		if($rss) {
+			$this->document = array();
+			$this->channel = array();
+			$this->items = array();
+			$DOMDocument = new DOMDocument;
+			$DOMDocument->strictErrorChecking = false;
+			$DOMDocument->loadXML($rss);
+			$this->document = $this->extractDOM($DOMDocument->childNodes);
+		}
+	}
+	
+	private function valueReturner($valueBlock=false) {
+		if(!$valueBlock) {
+			$valueBlock = $this->document;
+		}
+		foreach($valueBlock as $valueName => $values) {
+				if(isset($values['value'])) {
+					$values = $values['value'];
+				}
+				if(is_array($values)) {
+					$valueBlock[$valueName] = $this->valueReturner($values);
+				} else {
+					$valueBlock[$valueName] = $values;
+				}
+		}
+		return $valueBlock;
+	}
+	
+	private function extractDOM($nodeList,$parentNodeName=false) {
+		$itemCounter = 0;
+		foreach($nodeList as $values) {
+			if(substr($values->nodeName,0,1) != '#') {
+				if($values->nodeName == 'item') {
+					$nodeName = $values->nodeName.':'.$itemCounter;
+					$itemCounter++;
+				} else {
+					$nodeName = $values->nodeName;
+				}
+				$tempNode[$nodeName] = array();				
+				if($values->attributes) {
+					for($i=0;$values->attributes->item($i);$i++) {
+						$tempNode[$nodeName]['properties'][$values->attributes->item($i)->nodeName] = $values->attributes->item($i)->nodeValue;
+					}
+				}
+				if(!$values->firstChild) {
+					$tempNode[$nodeName]['value'] = $values->textContent;
+				} else {
+					$tempNode[$nodeName]['value']  = $this->extractDOM($values->childNodes, $values->nodeName);
+				}
+				if(in_array($parentNodeName, array('channel','rdf:RDF'))) {
+					if($values->nodeName == 'item') {
+						$this->items[] = $tempNode[$nodeName]['value'];
+					} elseif(!in_array($values->nodeName, array('rss','channel'))) {
+						$this->channel[$values->nodeName] = $tempNode[$nodeName];
+					}
+				}
+			} elseif(substr($values->nodeName,1) == 'text') {
+				$tempValue = trim(preg_replace('/\s\s+/',' ',str_replace("\n",' ', $values->textContent)));
+				if($tempValue) {
+					$tempNode = $tempValue;
+				}
+			} elseif(substr($values->nodeName,1) == 'cdata-section'){
+				$tempNode = $values->textContent;
+			}
+		}
+		return $tempNode;
+	}
+	
+	private function randomContext() {
+		$headerstrings = array();
+		$headerstrings['User-Agent'] = 'Mozilla/5.0 (Windows; U; Windows NT 5.'.rand(0,2).'; en-US; rv:1.'.rand(2,9).'.'.rand(0,4).'.'.rand(1,9).') Gecko/2007'.rand(10,12).rand(10,30).' Firefox/2.0.'.rand(0,1).'.'.rand(1,9);
+		$headerstrings['Accept-Charset'] = rand(0,1) ? 'en-gb,en;q=0.'.rand(3,8) : 'en-us,en;q=0.'.rand(3,8);
+		$headerstrings['Accept-Language'] = 'en-us,en;q=0.'.rand(4,6);
+		$setHeaders = 	'Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5'."\r\n".
+						'Accept-Charset: '.$headerstrings['Accept-Charset']."\r\n".
+						'Accept-Language: '.$headerstrings['Accept-Language']."\r\n".
+						'User-Agent: '.$headerstrings['User-Agent']."\r\n";
+		$contextOptions = array(
+			'http'=>array(
+				'method'=>"GET",
+				'header'=>$setHeaders
+			)
+		);
+		return stream_context_create($contextOptions);
+	}
+	
+}
+
+?>
\ No newline at end of file
--- /dev/null
+++ 6005.cw1.me6g08-1.0/src/feeds.conf
@@ -0,0 +1,24 @@
+# Config file for RSS_FEED Aggregator for info_6005
+#
+# For simplicity this config file requires tags to be on their own lines.
+# e.g. 
+# <tag>
+# data
+# </tag>
+#
+# NOT
+# <tag>data</tag>
+#
+# To add feeds, list them below within the <feeds> tag.
+
+<feeds>
+http://feeds.bbci.co.uk/news/rss.xml
+</feeds>
+
+# Number of items to list
+
+<items>
+10
+</items>
+
+# Add any other config here
--- /dev/null
+++ 6005.cw1.me6g08-1.0/src/index.php
@@ -0,0 +1,181 @@
+<?php
+/*
+	6005_cw1_2012 - the Simple PHP RSS Reader for INFO6005
+	Author: University of Southamoton, Electronics and Computer Science
+	Published: 30th Jan 2012 
+	
+	This is part of a coursework for Students on the INFO6005 course at the University of Southampton.
+	In this course students are expected to package some code for distribution on the debian/ubuntu platform
+
+	Usage:
+		php index.php --help (for help)
+	
+	This library can either read from a config file, or from stdin. 
+
+	Basic Coursework Specification:
+		* Student MUST use an appropiate source code control repository for managing both the exemplar code and other related resources. 
+		* Students MUST package this code to be installed on the latest available LTS version of ubuntu available from http://www.ubuntu.com/download/ubuntu/download
+		* The package MUST install on the latest ubuntu LTS release with a dpkg -i command.
+		* The LTS install used will be the desktop version with no optional software installed!
+		* The code MUST be installed in an appriate place in the operating system, e.g. /usr/share/package_name
+	
+	Extensions to get more marks (Source Code Control):
+		* Tags
+		* Changelog both for code and package
+	
+	Extensions to get more marks (Package)
+		* Man pages 
+		* Central OS controlled config which is conpatible with core software upgrades, e.g. user is prompted by package installer before any config is overwritten
+		* Examples
+		* Web Front End
+		* Individual user config files in users home directories
+		* Other package based features...
+
+	Candidates can also customise/fix and extend the code itself, this may help them fill the changelog with items. 
+
+	No marks are awarded for any complex customisations unless these are directly related to making a better package.
+
+	Candidates are encorages to record their changes (maybe as a changelog or in the package documentation) and submit these along with the completed package. 
+		
+*/
+
+	# Read config from STDIN
+	if ($argc > 1) {
+		$config = parse_args($argv);
+	}
+
+	# Read config from file
+	if (@!$config) {
+		$config_file = 'feeds.conf';
+		if (file_exists($config_file)) {
+			$config = conf_from_file($config_file);
+		}
+	}
+
+	if (@$config["help"]) {
+		print_help();
+		exit(1);
+	}
+
+	if (@count($config["feeds"]) < 1) {
+		echo "No Feeds Specified\n";
+		exit(1);
+	}
+
+	if (@count($config["items"]) > 0) {
+		$items = $config["items"][0];
+	} else {
+		$items = 1;
+	}
+	
+	process_request($config);
+
+	function process_request($config) {
+		# GOT THE FEEDS, PROCESS AND OUTPUT
+		require_once('rss_php.php');
+
+		$rss = new rss_php;
+
+		# SET DEFAULT ITEM COUNT, IN CASE ONE NOT SPECIFIED
+		$count = $config["items"][0];
+		if (@!$count) {
+			$count = 1;
+		}
+
+		$feeds = $config["feeds"];
+		
+		for ($i=0;$i<count($feeds);$i++) {
+			
+			$url = $feeds[$i];
+			
+			$rss->load($url);
+		
+			$items = $rss->getItems();
+		
+			echo "Items From $url \n";
+			echo "===========";
+			for ($j=0;$j<strlen($url);$j++) {
+				echo "=";
+			}
+			echo "\n\n";
+			
+			if (!$items) {
+				echo "FAILED TO LOAD ANY ITEMS\n\n";
+			} else {
+					
+				for ($k=0;$k<$count;$k++) {
+				
+					if ($items[$k]) {
+	
+						echo " * " . $items[$k]["title"] . "\n";
+
+					}			
+		
+				}
+			echo "\n\n";		
+			}
+		}
+	}
+
+	function print_help() {
+		echo "usage: command [options]\n";
+		echo "\n";
+		echo "Options\n";
+		echo "=======\n";
+		echo "\n";
+		echo "  --feeds feed1,feed2,feed3\n";
+		echo "     list of urls to read from\n";
+		echo "\n";
+		echo "  --items n\n";
+		echo "     number of items to read\n";
+		echo "\n";
+	}
+
+	function parse_args($args) {
+		$current_tag = "";
+		for ($i=1;$i<count($args);$i++) {
+			$arg = $args[$i];
+			if (substr($arg,0,2) == "--") {
+				$current_tag = substr($arg,2,strlen($arg));
+				$config[$current_tag] = "set";
+			} else {
+				$things = explode(",",$arg);
+				$config[$current_tag] = $things;
+			}
+		}
+		return $config;
+	}
+
+	function conf_from_file($config_file) {
+		$handle = fopen($config_file,"r");
+		
+		if (!$handle) {
+			return;
+		}
+	
+		$current_tag = "";
+		while (!feof($handle)) {
+			$line = trim(fgets($handle));
+	
+			if (substr($line,0,1) == "<" and substr($line,strlen($line)-1,strlen($line)) == ">") {
+				$tag = $line;
+				$tag = str_replace("<","",$tag);
+				$tag = str_replace(">","",$tag);
+				if ($current_tag != "") {
+					if ("/" . $current_tag == $tag) {
+						$current_tag = "";
+					} else {
+						echo "Tag Mismatch in Config File\n";
+						exit(0);
+					}
+				} else {
+					$current_tag = $tag;
+				}
+			} elseif ($current_tag != "") {
+				$conf[$current_tag][] = $line;
+			}
+		}
+		return $conf;
+	}
+
+?>
--- /dev/null
+++ 6005.cw1.me6g08-1.0/src/6005.cw1.me6g08
@@ -0,0 +1,3 @@
+#!/bin/bash --
+
+php /usr/share/6005.cw1.me6g08/index.php $@
